---
- name: ensure git
  package:
    name: git
    state: present

- name: ensure pihole group exists for pi user
  group:
    name: "{{ pihole_group }}"
    state: present

- name: create pihole user
  user:
    name: "{{ pihole_user }}"
    comment: pihole
    groups: "{{ pihole_group }}"

- name: Ensure pihole destination exists
  file:
    path: "{{ pihole_directory }}"
    state: directory
    mode: 0755
    owner: "{{ pihole_user }}"
    group: "{{ pihole_group }}"

- name: cloning pihole
  become: yes
  become_user: "{{ pihole_user }}"
  git:
    repo: "{{ pihole_repo }}"
    dest: "{{ pihole_directory }}"
    depth: "{{ pihole_repo_depth }}"
    version: "{{ pihole_branch }}"
    update: no

- name: Ensure that pihole configuration dir exists
  file:
    path: "{{ pihole_etc_dir }}"
    state: directory
    mode: 0755

- name: pushing config file setupVars
  template:
    src: templates/setupVars.conf.j2
    dest: "{{ pihole_etc_dir }}/setupVars.conf"
    mode: 0644
  notify: reconfigure pi-hole dns

- name: check for existing installation of pihole
  stat:
    path: "{{ pihole_bin_path }}"
  register: pihole_bin

- name: installing pihole
  shell:
    chdir: "{{ pihole_directory }}/automated install/"
    cmd: "bash basic-install.sh --unattended"
  when:
    - not pihole_bin.stat.exists or pihole_reinstall

- name: "check and apply updates to pihole"
  command: "{{ pihole_bin_path }} updatePihole"
  register: updatePihole
  when:
    - pihole_bin.stat.exists
    - pihole_update|bool
    - not pihole_reinstall

- name: Output from update
  debug:
    var: updatePihole.stdout_lines
  when: updatePihole.changed == true

- name: Finished! ipv4
  debug:
    msg: "visit http://{{ pihole_setupvars_ipv4_address }}/admin/ to start managing your pi-hole"
  when:
    - pihole_setupvars_ipv4_address
    - pihole_setupvars_ipv4_address|length > 0
    - pihole_setupvars_install_web_interface == "true"
    - pihole_setupvars_install_web_server == "true"

- name: Finished! ipv6
  debug:
    msg: "visit http://{{ pihole_setupvars_ipv6_address }}/admin/ to start managing your pi-hole"
  when:
    - pihole_setupvars_ipv6_address
    - pihole_setupvars_ipv6_address|length > 0
    - pihole_setupvars_install_web_interface == "true"
    - pihole_setupvars_install_web_server == "true"
